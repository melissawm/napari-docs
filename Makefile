.PHONY: docs clean

SPHINXOPTS =

# Gallery path must be given relative to the docs/ folder

ifeq ($(GALLERY_PATH),)
GALLERY_PATH := ../../napari/examples
endif

mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
current_dir := $(dir $(mkfile_path))
docs_dir := $(current_dir)docs

clean:
	echo clean
	echo $(current_dir)
	rm -rf _build/
	rm -rf $(docs_dir)/api/napari*.rst
	rm -rf $(docs_dir)/gallery/*
	rm -rf $(docs_dir)/_tags

docs-install:
	python -m pip install -qr $(current_dir)requirements.txt
	python -m pip freeze

prep-docs:
	python $(docs_dir)/_scripts/prep_docs.py

organize-docs:
	mv _build/unversioned/html/*.html _build/html/
	mv _build/unversioned/html/developers _build/html/
	mv _build/unversioned/html/naps _build/html/
	mv _build/unversioned/html/release _build/html/
	mv _build/unversioned/html/roadmaps _build/html/
	mv _build/unversioned/html/objects.inv _build/html/dev_objects.inv

docs-build: prep-docs
	NAPARI_CONFIG="" NAPARI_APPLICATION_IPY_INTERACTIVE=0 sphinx-build -M html docs/ _build -D sphinx_gallery_conf.examples_dirs=$(GALLERY_PATH) $(SPHINXOPTS)
	mv _build/html/objects.inv _build/napari_objects.inv
	NAPARI_CONFIG="" NAPARI_APPLICATION_IPY_INTERACTIVE=0 sphinx-build -M html unversioned/ _build/unversioned $(SPHINXOPTS)
	mv _build/napari_objects.inv _build/html/objects.inv
	$(MAKE) organize-docs

docs-xvfb: prep-docs
	NAPARI_CONFIG="" NAPARI_APPLICATION_IPY_INTERACTIVE=0 xvfb-run --auto-servernum sphinx-build -M html docs/ _build -D sphinx_gallery_conf.examples_dirs=$(GALLERY_PATH) $(SPHINXOPTS)
	mv _build/html/objects.inv _build/napari_objects.inv
	NAPARI_CONFIG="" NAPARI_APPLICATION_IPY_INTERACTIVE=0 xvfb-run --auto-servernum sphinx-build -M html unversioned/ _build/unversioned $(SPHINXOPTS)
	mv _build/napari_objects.inv _build/html/objects.inv
	$(MAKE) organize-docs

docs: clean docs-install docs-build

html: clean docs-build

# Implies noplot, but no clean - call 'make clean' manually if needed
# Autogenerated paths need to be ignored to prevent reload loops
# TODO: Fix this to work with two folders
html-live: prep-docs
	NAPARI_APPLICATION_IPY_INTERACTIVE=0 \
	sphinx-autobuild \
		-b html \
		docs/ \
		docs/_build \
		-D plot_gallery=0 \
		-D sphinx_gallery_conf.examples_dirs=$(GALLERY_PATH) \
		--ignore $(docs_dir)"/_tags/*" \
		--ignore $(docs_dir)"/api/napari*.rst" \
		--ignore $(docs_dir)"/gallery/*" \
		--ignore $(docs_dir)"/jupyter_execute/*" \
		--open-browser \
		--port=0 \
		$(SPHINXOPTS)

html-noplot: clean prep-docs
	NAPARI_APPLICATION_IPY_INTERACTIVE=0 sphinx-build -M html docs/ _build -D plot_gallery=0 -D sphinx_gallery_conf.examples_dirs=$(GALLERY_PATH) $(SPHINXOPTS)
	mv _build/html/objects.inv _build/napari_objects.inv
	NAPARI_APPLICATION_IPY_INTERACTIVE=0 sphinx-build -M html unversioned/ _build $(SPHINXOPTS)
	mv _build/napari_objects.inv _build/html/objects.inv
	$(MAKE) organize-docs

linkcheck-files:
	NAPARI_APPLICATION_IPY_INTERACTIVE=0 sphinx-build -b linkcheck -D plot_gallery=0 --color docs/ _build/html ${FILES} -D sphinx_gallery_conf.examples_dirs=$(GALLERY_PATH) $(SPHINXOPTS)
	NAPARI_APPLICATION_IPY_INTERACTIVE=0 sphinx-build -b linkcheck --color unversioned/ _build/unversioned/html ${FILES} $(SPHINXOPTS)

fallback-videos:
	for video in $(basename $(wildcard _static/images/*.webm)); do \
		if [ -a $$video.mp4 ]; then \
			echo "skipping $$video.mp4"; \
			continue; \
		fi; \
		ffmpeg -i $$video.webm -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" -c:v libx264 -preset slow -crf 22 -c:a aac -b:a 128k -strict -2 -y $$video.mp4; \
	done

fallback-videos-clean:
	rm -f _static/images/*.mp4
