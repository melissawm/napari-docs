name: Build and Deploy Docs

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

# Only allow one docs build at a time so that overlapping stale builds will get
# cancelled automatically.
concurrency:
  group: deploy_docs
  cancel-in-progress: true

jobs:

  build-and-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Clone docs repo
        uses: actions/checkout@v3
        with:
          path: docs  # place in a named directory

      - name: Clone main repo
        uses: actions/checkout@v3
        with:
          path: napari-repo  # place in a named directory
          ref: main
          repository: napari/napari
          # ensure version metadata is proper
          fetch-depth: 0

      - name: Copy examples to docs folder
        run: |
          cp -R napari-repo/examples docs

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - uses: tlambert03/setup-qt-libs@v1

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "napari-repo/[all]"  -c "napari-repo/resources/constraints/constraints_py3.10_docs.txt"

      - name: Testing
        run: |
          python -c 'import napari; print(napari.__version__)'
          python -c 'import napari.layers; print(napari.layers.__doc__)'

      - name: Build Docs
        uses: aganders3/headless-gui@v1
        env:
          GOOGLE_CALENDAR_ID: ${{ secrets.GOOGLE_CALENDAR_ID }}
          GOOGLE_CALENDAR_API_KEY: ${{ secrets.GOOGLE_CALENDAR_API_KEY }}
        with:
          # the napari-docs repo is cloned into a docs/ folder, hence the
          # invocation below. Locally, you should simply run make docs
          run: make -C docs docs GALLERY_PATH=../examples/

      - name: Copy permanent files locally
        run: |
          mkdir permanent
          cp -R docs/docs/_build/developers permanent
          cp docs/docs/_build/index.html permanent

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: permanent_docs
          path: permanent

  copy-files:

    needs: build-and-deploy
    name: Copy permanent files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        source_files: [index.html, developers]

    steps:

    - name: Download artifact
      uses: actions/download-artifact@master
      with:
        name: permanent_docs

    - name: Copy permanent files to napari.github.io/stable
      uses: dmnemec/copy_file_to_another_repo_action@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source_file: ${{ matrix.source_files }}
        destination_repo: 'melissawm/napari.github.io'
        destination_folder: 'stable'
        destination_branch: 'gh-pages'
        user_email: 'melissawm@gmail.com'
        user_name: 'melissawm'
